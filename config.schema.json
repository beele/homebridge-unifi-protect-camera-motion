{
  "pluginAlias": "homebridge-unifi-protect-camera-motion",
  "pluginType": "platform",
  "singular": true,
  "headerDisplay": "Please select/fill in the required fields. If anything is unclear please consult the readme: https://github.com/beele/homebridge-unifi-protect-camera-motion",
  "footerDisplay": "The **FFmpeg** binary must be installed on your system for this plugin to work.Only supported on regular X86 or X86-64 and ARM CPUs, if you have a special CPU with missing instructions like AVX it will not work!",
  "schema": {
    "name": {
      "title": "Name",
      "type": "string",
      "default": "Unifi protect cameras & motion sensors",
      "required": true
    },

    "unifi": {
      "title": "Unifi specific configuration",
      "type": "object",
      "properties": {
        "controller": {
          "title": "The base controller URL",
          "type": "string",
          "default": "",
          "description": "The base URL that points to the controller instance, also supports Unifi OS"
        },
        "controller_rtsp": {
          "title": "The base URL for RTSP streams",
          "type": "string",
          "default": "",
          "description": "The base URL that is to be used for al RTSP streams, be sure to include the correct port!"
        },
        "username": {
          "title": "The username for the Protect UI login",
          "type": "string",
          "default": ""
        },
        "password": {
          "title": "The password for the Protect UI login",
          "type": "string",
          "default": ""
        },
        "motion_interval": {
          "title": "The motion interval in milliseconds",
          "type": "integer",
          "minimum": 2000,
          "default": 5000,
          "description": "This interval describes the time between the checks for new motion. A lower value yields more detection but has a higher system load!"
        },
        "motion_repeat_interval": {
          "title": "The motion repeat interval in milliseconds",
          "type": "integer",
          "minimum": 15000,
          "default": 30000,
          "description": "This interval describers the time in which new motion events will not be generated for the same motion id since the last detection"
        },
        "motion_score": {
          "title": "The score required for a motion event to be detected",
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 50,
          "description": "A higher value can exclude bogus events, a lower value will generate more events"
        },
        "enhanced_motion": {
          "title": "Enable enhanced (AI) based motion detection",
          "type": "boolean",
          "default": true,
          "description": "Setting this to true will use a MobileNet CoCo SSD detection on the motion events from Protect to filter only the relevant events"
        },
        "enhanced_motion_score": {
          "title": "The score required for an enhanced motion event to be detected",
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 50,
          "description": "This score does not supersede the motion_score field. In acts on top of it. So a Protect motion event is detected by the first parameter and than fed into the enhanced detection system which uses the second parameter"
        },
        "enhanced_classes": {
          "title": "Contains all the object classes to use for enhanced detection",
          "type": "array",
          "items": {
            "type": "string",
            "oneOf": [
              { "title": "person",        "enum": ["person"] },
              { "title": "bicycle",       "enum": ["bicycle"] },
              { "title": "car",           "enum": ["car"] },
              { "title": "motorcycle",    "enum": ["motorcycle"] },
              { "title": "airplane",      "enum": ["airplane"] },
              { "title": "bus",           "enum": ["bus"] },
              { "title": "train",         "enum": ["train"] },
              { "title": "truck",         "enum": ["truck"] },
              { "title": "boat",          "enum": ["boat"] },
              { "title": "traffic light", "enum": ["traffic light"] },
              { "title": "fire hydrant",  "enum": ["fire hydrant"] },
              { "title": "stop sign",     "enum": ["stop sign"] },
              { "title": "parking meter", "enum": ["parking meter"] },
              { "title": "bird",          "enum": ["bird"] },
              { "title": "cat",           "enum": ["cat"] },
              { "title": "dog",           "enum": ["dog"] },
              { "title": "horse",         "enum": ["horse"] },
              { "title": "sheep",         "enum": ["sheep"] },
              { "title": "cow",           "enum": ["cow"] },
              { "title": "elephant",      "enum": ["elephant"] },
              { "title": "bear",          "enum": ["bear"] },
              { "title": "zebra",         "enum": ["zebra"] },
              { "title": "giraffe",       "enum": ["giraffe"] },
              { "title": "backpack",      "enum": ["backpack"] },
              { "title": "umbrella",      "enum": ["umbrella"] },
              { "title": "handbag",       "enum": ["handbag"] },
              { "title": "tie",           "enum": ["tie"] },
              { "title": "suitcase",      "enum": ["suitcase"] },
              { "title": "frisbee",       "enum": ["frisbee"] },
              { "title": "skis",          "enum": ["skis"] },
              { "title": "snowboard",     "enum": ["snowboard"] },
              { "title": "sports ball",   "enum": ["sports ball"] },
              { "title": "kite",          "enum": ["kite"] },
              { "title": "baseball bat",  "enum": ["baseball bat"] },
              { "title": "baseball glove","enum": ["baseball glove"] },
              { "title": "skateboard",    "enum": ["skateboard"] },
              { "title": "surfboard",     "enum": ["surfboard"] },
              { "title": "tennis racke",  "enum": ["tennis racket"] },
              { "title": "bottle",        "enum": ["bottle"] },
              { "title": "wine glass",    "enum": ["wine glass"] },
              { "title": "cup",           "enum": ["cup"] },
              { "title": "fork",          "enum": ["fork"] },
              { "title": "knife",         "enum": ["knife"] },
              { "title": "spoon",         "enum": ["spoon"] },
              { "title": "bowl",          "enum": ["bowl"] },
              { "title": "banana",        "enum": ["banana"] },
              { "title": "apple",         "enum": ["apple"] },
              { "title": "sandwich",      "enum": ["sandwich"] },
              { "title": "orange",        "enum": ["orange"] },
              { "title": "broccoli",      "enum": ["broccoli"] },
              { "title": "carrot",        "enum": ["carrot"] },
              { "title": "hot do",        "enum": ["hot dog"] },
              { "title": "pizza",         "enum": ["pizza"] },
              { "title": "donut",         "enum": ["donut"] },
              { "title": "cake",          "enum": ["cake"] },
              { "title": "chair",         "enum": ["chair"] },
              { "title": "couch",         "enum": ["couch"] },
              { "title": "potted plan",   "enum": ["potted plant"] },
              { "title": "bed",           "enum": ["bed"] },
              { "title": "dining table",  "enum": ["dining table"] },
              { "title": "toilet",        "enum": ["toilet"] },
              { "title": "tv",            "enum": ["tv"] },
              { "title": "laptop",        "enum": ["laptop"] },
              { "title": "mouse",         "enum": ["mouse"] },
              { "title": "remote",        "enum": ["remote"] },
              { "title": "keyboard",      "enum": ["keyboard"] },
              { "title": "cell phone",    "enum": ["cell phone"] },
              { "title": "microwave",     "enum": ["microwave"] },
              { "title": "oven",          "enum": ["oven"] },
              { "title": "toaster",       "enum": ["toaster"] },
              { "title": "sink",          "enum": ["sink"] },
              { "title": "refrigerator",  "enum": ["refrigerator"] },
              { "title": "book",          "enum": ["book"] },
              { "title": "clock",         "enum": ["clock"] },
              { "title": "vase",          "enum": ["vase"] },
              { "title": "scissors",      "enum": ["scissors"] },
              { "title": "teddy bear",    "enum": ["teddy bear"] },
              { "title": "hair drier",    "enum": ["hair drier"] },
              { "title": "toothbrush",    "enum": ["toothbrush"] }
            ]
          },
          "default": [
            "person"
          ],
          "description": "A motion event will only be generated if one of the specified classes is detected"
        },
        "save_snapshot": {
          "title": "Enable saving of snapshots of motion events?",
          "type": "boolean",
          "default": false,
          "description": "If enabled every time a motion event is generated the snapshot used for detection will be saved to the .homebridge directory"
        },
        "debug": {
          "title": "Enable debug logging?",
          "type": "boolean",
          "default": false,
          "description": "If enabled will print out a lot of debug logging of the plugin and FFmpeg, only use this for debugging!",
          "required": true
        }
      }
    },

    "googlePhotos": {
      "title": "Google Photos specific configuration",
      "type": "object",
      "properties": {
        "upload_gphotos": {
          "title": "Enable upload to Google Photos?",
          "type": "boolean",
          "default": false,
          "description": "If enabled every time a motion event is generated the snapshot used for detection will be uploaded to Google Photos"
        },
        "auth_clientId": {
          "title": "Google OAuth2 Client ID",
          "type": "string",
          "default": null,
          "description": "Consult the readme/wiki for more information!"
        },
        "auth_clientSecret": {
          "title": "Google OAuth2 Client Secret",
          "type": "string",
          "default": null,
          "description": "Consult the readme/wiki for more information!"
        },
        "auth_redirectUrl": {
          "title": "Auth2 redirect handler",
          "type": "string",
          "default": "http://localhost:8080/oauth2-callback",
          "description": "Consult the readme/wiki for more information!"
        }
      }
    },

    "videoConfig": {
      "title": "FFmpeg specific configuration",
      "type": "object",
      "properties": {
        "maxStreams": {
          "title": "Maximum Number of Streams",
          "type": "integer",
          "default": 2,
          "minimum": 1,
          "description": "The maximum number of streams that will be generated for this camera"
        },
        "maxWidth": {
          "title": "Maximum Width",
          "type": "integer",
          "default": 1024,
          "minimum": 1,
          "description": "The maximum width reported to HomeKit"
        },
        "maxHeight": {
          "title": "Maximum Height",
          "type": "integer",
          "default": 576,
          "minimum": 1,
          "description": "The maximum height reported to HomeKit"
        },
        "maxFPS": {
          "title": "Maximum FPS",
          "type": "integer",
          "default": 15,
          "minimum": 1,
          "description": "The maximum frame rate of the stream"
        },
        "maxBitrate": {
          "title": "Maximum Bitrate",
          "type": "integer",
          "default": 3000,
          "minimum": 1,
          "description": "The maximum bit rate of the stream"
        },
        "vcodec": {
          "title": "Video Codec",
          "type": "string",
          "default": "libx264",
          "description": "The coded to use, use h264_omx on Raspberry Pi"
        },
        "packetSize": {
          "title": "Packet Size",
          "type": "number",
          "default": 376,
          "multipleOf": 188.0
        },
        "audio": {
          "title": "Enable Audio?",
          "type": "boolean",
          "default": false,
          "description": "Only enable when your installed FFmpeg supports audio!"
        },
        "additionalCommandline": {
          "title": "Additional commandline parameters",
          "type": "string",
          "default": "-protocol_whitelist https,crypto,srtp,rtp,udp",
          "description": "Any additional commandline parameters to pass to FFmpeg"
        },
        "debug": {
          "title": "Enable Debug Mode?",
          "type": "boolean",
          "default": false
        }
      }
    }
  }
}